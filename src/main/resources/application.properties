# ===================================================================
# COMMON SPRING BOOT PROPERTIES
#
# This sample file is provided as a guideline.
#
# This content is released under the MIT License (MIT)
#
# Copyright (c) 2020, canchito-dev
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# @author 		Josï¿½ Carlos Mendoza Prego
# @copyright	Copyright (c) 2020, canchito-dev (http://www.canchito-dev.com)
# @license		http://opensource.org/licenses/MIT	MIT License
# @link			http://www.canchito-dev.com/public/blog/2020/05/10/integrate-flowable-into-your-spring-boot-application/
# @link			https://github.com/canchito-dev/spring-flowable-integration
# ===================================================================

server.port=18182
# ===================================================================
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# ===================================================================
# spring.datasource.driver-class-name	= Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
# spring.datasource.password			= Login password of the database.
# spring.datasource.url					= JDBC url of the database.
# spring.datasource.username			= Login username of the database.
# ===================================================================
spring.datasource.username=flowable
spring.datasource.password=flowable
#spring.datasource.url=jdbc:h2:~/flowable-db/db
spring.datasource.url=jdbc:h2:mem:flowable-db/db
spring.datasource.driver-class-name=org.h2.Driver

# ===================================================================
# H2 Database
# ===================================================================
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=true

# ===================================================================
# Core (Process) [FlowableProperties]
# ===================================================================
# flowable.deployment-name  = The name of the auto deployment. Default is SpringBootAutoDeployment
# ===================================================================
flowable.deployment-name=CanchitoDevBPMNAutoDeployment

# ===================================================================
# CMMN [FlowableCmmnProperties]
# ===================================================================
# flowable.cmmn.deployment-name = The name of the deployment for the CMMN resources. Default is SpringBootAutoDeployment
# ===================================================================
flowable.cmmn.deployment-name=CanchitoDevCMMNAutoDeployment

# ===================================================================
# DMN [FlowableDmnProperties]
# ===================================================================
# flowable.dmn.deployment-name  = The name of the deployment for the dmn resources. Default is SpringBootAutoDeployment
# ===================================================================
flowable.dmn.deployment-name=CanchitoDevDMNAutoDeployment

# ===================================================================
# Form [FlowableFormProperties]
# ===================================================================
# flowable.form.deployment-name = The name of the deployment for the form resources. Default is SpringBootAutoDeployment
# ===================================================================
flowable.form.deployment-name=CanchitoDevFormAutoDeployment

# ===================================================================
# Event Registry [FlowableEventRegistryProperties]
# ===================================================================
# flowable.eventregistry.deployment-name = The name of the deployment for the event registry resources. Default is SpringBootAutoDeployment
# ===================================================================
flowable.eventregistry.deployment-name=CanchitoDevEventRegistryAutoDeployment

# ===================================================================
# ACTUATOR
# ===================================================================
# management.endpoint.flowable.cache.time-to-live   = Maximum time that a response can be cached. Default is 0ms
# management.endpoint.flowable.enabled              = Whether to enable the flowable endpoint. Default is true
# ===================================================================
management.endpoint.flowable.cache.time-to-live=0ms
management.endpoint.flowable.enabled=true

# ===================================================================
# ENDPOINTS GENERAL CONFIGURATION
# ===================================================================
# management.endpoints.enabled-by-default	= Whether to enable or disable all endpoints by default.
# ===================================================================
management.endpoints.enabled-by-default=true

# ===================================================================
# ENDPOINTS WEB CONFIGURATION (WebEndpointProperties)
# ===================================================================
# management.endpoints.web.exposure.include	= Endpoint IDs that should be included or '*' for all.
# ===================================================================
management.endpoints.web.exposure.include=health,shutdown,env,info,flowable,mappings,bindings

# ===================================================================
# HEALTH ENDPOINT (HealthEndpoint, HealthEndpointProperties)
# ===================================================================
# management.endpoint.health.show-details   = When to show full health details. Default is never
# ===================================================================
management.endpoint.health.show-details=always

# ===================================================================
# KAFKA (KafkaProperties)
# ===================================================================
# spring.kafka.client-id                        = ID to pass to the server when making requests. Used for server-side logging.
# spring.kafka.consumer.group-id                = Unique string that identifies the consumer group to which this consumer belongs
# spring.kafka.consumer.auto-offset-reset       = What to do when there is no initial offset in Kafka or if the current offset no longer exists on the server.
# spring.kafka.listener.missing-topics-fatal    = Whether the container should fail to start if at least one of the configured topics are not present on the broker.
# spring.kafka.producer.client-id               = ID to pass to the server when making requests. Used for server-side logging.
# spring.kafka.consumer.client-id               = ID to pass to the server when making requests. Used for server-side logging.
# ===================================================================
#spring.kafka.admin.properties.autoCreateTopics=true
spring.kafka.client-id=spring-flowable-integration
spring.kafka.consumer.group-id=spring-flowable-integration-consumer-group-1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.missing-topics-fatal=true

#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer